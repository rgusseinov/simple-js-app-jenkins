- name: Deploy App on EC2
  hosts: ec2_instance
  become: true
  vars:
    docker_image: "ruslan0688/simple-js-app-jenkins"
    image_version: "app_dev_dd40b00"
    container_name: "simple-js-app"
    exposed_port: "81"
    nginx_conf_host: "/home/ec2-user/default.conf"
    nginx_conf_container: "/etc/nginx/conf.d/default.conf"
    web_root_host: "/home/ec2-user/var_www_html"
    web_root_container: "/var/www/html"

  tasks:
    - name: Ensure required directories exist
      file:
        path: "{{ web_root_host }}"
        state: directory
        mode: '0755'

    - name: Copy Nginx config to host
      copy:
        dest: "{{ nginx_conf_host }}"
        content: |
          server {
              listen 80;
              server_name localhost;
              root {{ web_root_container }};
              index index.html;

              location / {
                  try_files $uri $uri/ =404;
              }
          }
        mode: '0644'

    - name: Stop and remove existing container (if running)
      shell: |
        docker ps -q --filter "name={{ container_name }}" | xargs -r docker stop
        docker ps -aq --filter "name={{ container_name }}" | xargs -r docker rm
        docker ps -q --filter "publish={{ exposed_port }}" | xargs -r docker stop
        docker ps -aq --filter "publish={{ exposed_port }}" | xargs -r docker rm
      ignore_errors: true

    - name: Free up port {{ exposed_port }} if still in use
      shell: "fuser -k {{ exposed_port }}/tcp"
      ignore_errors: true

    - name: Pull new Docker image
      shell: "docker pull {{ docker_image }}:{{ image_version }}"

    - name: Run new container with mounted config and web root
      shell: |
        docker run -d --name {{ container_name }} \
        -p 81:80 \
        -v {{ nginx_conf_host }}:{{ nginx_conf_container }}:ro \
        -v {{ web_root_host }}:{{ web_root_container }} \
        {{ docker_image }}:{{ image_version }}
